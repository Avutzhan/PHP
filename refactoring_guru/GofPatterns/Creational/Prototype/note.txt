Прототип — это порождающий паттерн проектирования,
который позволяет копировать объекты, не вдаваясь в
подробности их реализации.

плюсы
Позволяет клонировать объекты, не привязываясь к их кон-
кретным классам.

Меньше повторяющегося кода инициализации объектов.

Ускоряет создание объектов

Альтернатива созданию подклассов для конструирования
сложных объектов.

минусы

Сложно клонировать составные объекты, имеющие ссылки
на другие объекты.

отношения с другими паттернами

Многие архитектуры начинаются с применения Фабричного
метода (более простого и расширяемого через подклассы) и
эволюционируют в сторону Абстрактной фабрики, Прототи-
па или Строителя (более гибких, но и более сложных).

Классы Абстрактной фабрики чаще всего реализуются с
помощью Фабричного метода, хотя они могут быть построе-
ны и на основе Прототипа.

Если Команду нужно копировать перед вставкой в историю
выполненных команд, вам может помочь Прототип.

Архитектура, построенная на Компоновщиках и Декорато-
рах, часто может быть улучшена за счёт внедрения Прототи-
па. Он позволяет клонировать сложные структуры объектов,
а не собирать их заново.

Прототип не опирается на наследование, но ему нужна
сложная операция инициализации. Фабричный метод, на-
оборот, построен на наследовании, но не требует сложной
инициализации.

Снимок иногда можно заменить Прототипом, если объект,
состояние которого требуется сохранять в истории, доволь-
но простой, не имеет активных ссылок на внешние ресурсы
либо их можно легко восстановить.

Абстрактная фабрика, Строитель и Прототип могут быть реа-
лизованы при помощи Одиночки.














