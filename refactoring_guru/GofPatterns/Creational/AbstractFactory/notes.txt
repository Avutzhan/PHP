Абстрактная фабрика — это порождающий паттерн
проектирования, который позволяет создавать семейства
связанных объектов, не привязываясь к конкретным классам
создаваемых объектов.

Плюсы
Гарантирует сочетаемость создаваемых продуктов.
Избавляет клиентский код от привязки к конкретным клас-
сам продуктов.
Выделяет код производства продуктов в одно место, упро-
щая поддержку кода.
Упрощает добавление новых продуктов в программу.
Реализует принцип открытости/закрытости.
Минусы
Усложняет код программы из-за введения множества допол-
нительных классов.
Требует наличия всех типов продуктов в каждой вариации.

Отношения с другими паттернами
Многие архитектуры начинаются с применения Фабричного
метода (более простого и расширяемого через подклассы) и
эволюционируют в сторону Абстрактной фабрики, Прототи-
па или Строителя (более гибких, но и более сложных).

Строитель концентрируется на построении сложных объек-
тов шаг за шагом. Абстрактная фабрика специализируется
на создании семейств связанных продуктов. Строитель воз-
вращает продукт только после выполнения всех шагов, а
Абстрактная фабрика возвращает продукт сразу же.

Классы Абстрактной фабрики чаще всего реализуются с
помощью Фабричного метода, хотя они могут быть построе-
ны и на основе Прототипа.

Абстрактная фабрика может быть использована вместо
Фасада для того, чтобы скрыть платформо-зависимые
классы.

Абстрактная фабрика может работать совместно с Мостом.
Это особенно полезно, если у вас есть абстракции, кото-
рые могут работать только с некоторыми из реализаций. В
этом случае фабрика будет определять типы создаваемых
абстракций и реализаций.

Абстрактная фабрика, Строитель и Прототип могут быть реа-
лизованы при помощи Одиночки.


