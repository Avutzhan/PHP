Одиночка — это порождающий паттерн проектирования,
который гарантирует, что у класса есть только один
экземпляр, и предоставляет к нему глобальную точку
доступа.

Плюсы

Гарантирует наличие единственного экземпляра класса.

Предоставляет к нему глобальную точку доступа.

Реализует отложенную инициализацию объекта-одиночки.

минусы

Нарушает принцип единственной ответственности класса.

Маскирует плохой дизайн.

Проблемы мультипоточности.

Требует постоянного создания Mock-объектов при юнит-
тестировании.

отношения с другими паттернами

Фасад можно сделать Одиночкой, так как обычно нужен
только один объект-фасад.

Паттерн Легковес может напоминать Одиночку, если для
конкретной задачи у вас получилось свести количество объ-
ектов к одному. Но помните, что между паттернами есть два
кардинальных отличия:
1. В отличие от Одиночки, вы можете иметь множество объ-
ектов-легковесов.
2. Объекты-легковесы должны быть неизменяемыми, тогда
как объект-одиночка допускает изменение своего
состояния.

Абстрактная фабрика, Строитель и Прототип могут быть реа-
лизованы при помощи Одиночки.