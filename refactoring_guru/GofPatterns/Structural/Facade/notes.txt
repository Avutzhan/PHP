Фасад — это структурный паттерн проектирования, который
предоставляет простой интерфейс к сложной системе
классов, библиотеке или фреймворку.

поюсы

Изолирует клиентов от компонентов сложной подсистемы.

минусы

Фасад рискует стать божественным объектом, привязанным
ко всем классам программы.

отношения с другими паттернами

Фасад задаёт новый интерфейс, тогда как Адаптер повторно
использует старый. Адаптер оборачивает только один класс,
а Фасад оборачивает целую подсистему. Кроме того, Адап-
тер позволяет двум существующим интерфейсам работать
сообща, вместо того, чтобы задать полностью новый.

Абстрактная фабрика может быть использована вместо
Фасада для того, чтобы скрыть платформо-зависимые
классы.

Легковес показывает, как создавать много мелких объектов,
а Фасад показывает, как создать один объект, который отоб-
ражает целую подсистему.

Посредник и Фасад похожи тем, что пытаются организовать
работу множества существующих классов.
◦ Фасад создаёт упрощённый интерфейс к подсистеме, не
внося в неё никакой добавочной функциональности.
Сама подсистема не знает о существовании Фасада. Клас-
сы подсистемы общаются друг с другом напрямую.
◦ Посредник централизует общение между компонентами
системы. Компоненты системы знают только о существо-

вании Посредника, у них нет прямого доступа к другим
компонентам.

Фасад можно сделать Одиночкой, так как обычно нужен
только один объект-фасад.

Фасад похож на Заместитель тем, что замещает сложную
подсистему и может сам её инициализировать. Но в отли-
чие от Фасада, Заместитель имеет тот же интерфейс, что его
служебный объект, благодаря чему их можно взаимозаме-
нять.


