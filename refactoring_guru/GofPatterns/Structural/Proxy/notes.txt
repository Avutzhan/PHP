Также известен как: Proxy

Заместитель — это структурный паттерн проектирования,
который позволяет подставлять вместо реальных объектов
специальные объекты-заменители. Эти объекты
перехватывают вызовы к оригинальному объекту, позволяя
сделать что-то до или после передачи вызова оригиналу.

плюсы

Позволяет контролировать сервисный объект незаметно для
клиента.

Может работать, даже если сервисный объект ещё не
создан.

Может контролировать жизненный  цикл служебного
объекта.

минусы

Усложняет код программы из-за введения дополнительных
классов.

Увеличивает время отклика от сервиса.

Отношения с другими паттернами

Адаптер предоставляет классу альтернативный интерфейс.
Декоратор предоставляет расширенный интерфейс. Заме-
ститель предоставляет тот же интерфейс.

Фасад похож на Заместитель тем, что замещает сложную
подсистему и может сам её инициализировать. Но в отли-
чие от Фасада, Заместитель имеет тот же интерфейс, что его
служебный объект, благодаря чему их можно взаимозаме-
нять.

Декоратор и Заместитель имеют схожие структуры, но раз-
ные назначения. Они похожи тем, что оба построены на
композиции и делегируют работу другим объектам. Паттер-
ны отличаются тем, что Заместитель сам управляет жизнью
сервисного объекта, а обёртывание Декораторов контроли-
руется клиентом.

