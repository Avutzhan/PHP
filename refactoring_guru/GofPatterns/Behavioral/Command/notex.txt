также известен как: Действие, Транзакция, Action, Command

Команда — это поведенческий паттерн проектирования,
который превращает запросы в объекты, позволяя
передавать их как аргументы при вызове методов, ставить
запросы в очередь, логировать их, а также поддерживать
отмену операций.

плюсы

Убирает прямую зависимость между объектами, вызываю-
щими операции, и объектами, которые их непосредственно
выполняют.

Позволяет реализовать простую отмену и повтор операций.

Позволяет реализовать отложенный запуск операций.

Позволяет собирать сложные команды из простых.

Реализует принцип открытости/закрытости.

минусы

Усложняет код программы из-за введения множества допол-
нительных классов.

Отношения с другими паттернами

Цепочка обязанностей, Команда, Посредник и Наблюдатель
показывают различные способы работы отправителей
запросов с их получателями:

Цепочка обязанностей передаёт запрос последовательно
через цепочку потенциальных получателей, ожидая, что
какой-то из них обработает запрос.
◦ Команда устанавливает косвенную одностороннюю связь
от отправителей к получателям.
◦ Посредник убирает прямую связь между отправителями
и получателями, заставляя их общаться опосредованно,
через себя.
◦ Наблюдатель передаёт запрос одновременно всем заин-
тересованным получателям, но позволяет им динамиче-
ски подписываться или отписываться от таких
оповещений.

Обработчики в Цепочке обязанностей могут быть выполне-
ны в виде Команд. В этом случае множество разных опера-
ций может быть выполнено над одним и тем же контекстом,
коим является запрос.

Но есть и другой подход, в котором сам запрос является
Командой, посланной по цепочке объектов. В этом случае
одна и та же операция может быть выполнена над множе-
ством разных контекстов, представленных в виде цепочки.

Команду и Снимок можно использовать сообща для реа-
лизации отмены операций. В этом случае объекты команд
будут отвечать за выполнение действия над объектом, а
снимки будут хранить резервную копию состояния этого
объекта, сделанную перед самым запуском команды.

Команда и Стратегия похожи по духу, но отличаются мас-
штабом и применением:
◦ Команду используют, чтобы превратить любые разнород-
ные действия в объекты. Параметры операции превра-
щаются в поля объекта. Этот объект теперь можно
логировать, хранить в истории для отмены, передавать во
внешние сервисы и так далее.
◦ С другой стороны, Стратегия описывает разные способы
произвести одно и то же действие, позволяя взаимозаме-
нять эти способы в каком-то объекте контекста.

Если Команду нужно копировать перед вставкой в историю
выполненных команд, вам может помочь Прототип.

Посетитель можно рассматривать как расширенный аналог
Команды, который способен работать сразу с несколькими
видами получателей.

